# This file contains the auditctl rules that are loaded
# whenever the audit daemon is started via the initscripts.
# The rules are simply the parameters that would be passed
# to auditctl.

# Remove any existing rules
-D

# Buffer Size
## Feel free to increase this if the machine panic's
-b 8192

# Failure Mode
## Possible values: 0 (silent), 1 (printk, print a failure message), 2 (panic, halt the system)
-f 1

# Ignore errors
## e.g. caused by users or files not found in the local environment
-i

# Self Auditing ---------------------------------------------------------------

## Monitor for use of audit management tools
-w /sbin/auditctl -p x -k audit-wazuh-c
-w /sbin/auditd -p x -k audit-wazuh-c
-w /usr/sbin/augenrules -p x -k audit-wazuh-c

# Filters ---------------------------------------------------------------------

### We put these early because audit is a first match wins system.

## Ignore SELinux AVC records
-a always,exclude -F msgtype=AVC

## Ignore current working directory records
-a always,exclude -F msgtype=CWD

## Cron jobs fill the logs with stuff we normally don't want (works with SELinux)
-a never,user -F subj_type=crond_t
-a never,exit -F subj_type=crond_t

## This prevents chrony from overwhelming the logs
-a never,exit -F arch=b64 -S adjtimex -F auid=unset -F uid=chrony -F subj_type=chronyd_t

## This is not very interesting and wastes a lot of space if the server is public facing
-a always,exclude -F msgtype=CRYPTO_KEY_USER

## VMWare tools
-a never,exit -F arch=b32 -S fork -F success=0 -F path=/usr/lib/vmware-tools -F subj_type=initrc_t -F exit=-2
-a never,exit -F arch=b64 -S fork -F success=0 -F path=/usr/lib/vmware-tools -F subj_type=initrc_t -F exit=-2

## High Volume Event Filter (especially on Linux Workstations)
-a never,exit -F arch=b32 -F dir=/dev/shm -k sharedmemaccess
-a never,exit -F arch=b64 -F dir=/dev/shm -k sharedmemaccess
-a never,exit -F arch=b32 -F dir=/var/lock/lvm -k locklvm
-a never,exit -F arch=b64 -F dir=/var/lock/lvm -k locklvm

## FileBeat
-a never,exit -F arch=b32 -F path=/opt/filebeat -k filebeat
-a never,exit -F arch=b64 -F path=/opt/filebeat -k filebeat

# Rules -----------------------------------------------------------------------

## Kernel module loading and unloading
-a always,exit -F perm=x -F auid!=-1 -F path=/sbin/insmod -k audit-wazuh-x
-a always,exit -F perm=x -F auid!=-1 -F path=/sbin/modprobe -k audit-wazuh-x
-a always,exit -F perm=x -F auid!=-1 -F path=/sbin/rmmod -k audit-wazuh-x
-a always,exit -F arch=b64 -S finit_module -S init_module -S delete_module -F auid!=-1 -k audit-wazuh-x
-a always,exit -F arch=b32 -S finit_module -S init_module -S delete_module -F auid!=-1 -k audit-wazuh-x

## KExec usage (all actions)
-a always,exit -F arch=b64 -S kexec_load -k audit-wazuh-x
-a always,exit -F arch=b32 -S sys_kexec_load -k audit-wazuh-x

## Special files
-a always,exit -F arch=b32 -S mknod -S mknodat -k audit-wazuh-x
-a always,exit -F arch=b64 -S mknod -S mknodat -k audit-wazuh-x

## Mount operations (only attributable)
-a always,exit -F arch=b64 -S mount -S umount2 -F auid!=-1 -k audit-wazuh-x
-a always,exit -F arch=b32 -S mount -S umount -S umount2 -F auid!=-1 -k audit-wazuh-x

## Change swap (only attributable)
-a always,exit -F arch=b64 -S swapon -S swapoff -F auid!=-1 -k audit-wazuh-x
-a always,exit -F arch=b32 -S swapon -S swapoff -F auid!=-1 -k audit-wazuh-x

## Time
-a always,exit -F arch=b32 -F uid!=ntp -S adjtimex -S settimeofday -S clock_settime -k audit-wazuh-x
-a always,exit -F arch=b64 -F uid!=ntp -S adjtimex -S settimeofday -S clock_settime -k audit-wazuh-x

## Stunnel
-w /usr/sbin/stunnel -p x -k audit-wazuh-x
-w /usr/bin/stunnel -p x -k audit-wazuh-x

## Passwd
-w /usr/bin/passwd -p x -k audit-wazuh-x

## Process ID change (switching accounts) applications
-w /bin/su -p x -k audit-wazuh-x
-w /usr/bin/sudo -p x -k audit-wazuh-x

# Systemd
-w /bin/systemctl -p x -k audit-wazuh-x

# Gcc
-w /usr/bin/gcc -p x -k audit-wazuh-x

# Special Rules ---------------------------------------------------------------

## Suspicious activity
-w /usr/bin/wget -p x -k audit-wazuh-x
-w /usr/bin/curl -p x -k audit-wazuh-x
-w /bin/nc -p x -k audit-wazuh-x
-w /bin/netcat -p x -k audit-wazuh-x
-w /usr/bin/ncat -p x -k audit-wazuh-x
-w /usr/bin/nmap -p x -k audit-wazuh-x

## Added to catch netcat on Ubuntu
-w /bin/nc.openbsd -p x -k audit-wazuh-x
-w /bin/nc.traditional -p x -k audit-wazuh-x

## Sbin suspicious activity
-w /sbin/iptables -p x -k audit-wazuh-x
-w /sbin/ip6tables -p x -k audit-wazuh-x
-w /sbin/ifconfig -p x -k audit-wazuh-x
-w /usr/sbin/arptables -p x -k audit-wazuh-x
-w /usr/sbin/ebtables -p x -k audit-wazuh-x
-w /sbin/xtables-nft-multi -p x -k audit-wazuh-x
-w /usr/sbin/nft -p x -k audit-wazuh-x
-w /usr/sbin/tcpdump -p x -k audit-wazuh-x
-w /usr/sbin/traceroute -p x -k audit-wazuh-x
-w /usr/sbin/ufw -p x -k audit-wazuh-x

## dbus-send invocation
### may indicate privilege escalation CVE-2021-3560
-w /usr/bin/dbus-send -p x -k audit-wazuh-x

## pkexec invocation
### may indicate privilege escalation CVE-2021-4034
-w /usr/bin/pkexec -p x -k audit-wazuh-x

## Injection
### These rules watch for code injection by the ptrace facility.
### This could indicate someone trying to do something bad or just debugging
-a always,exit -F arch=b32 -S ptrace -F a0=0x4 -k audit-wazuh-c
-a always,exit -F arch=b64 -S ptrace -F a0=0x4 -k audit-wazuh-c
-a always,exit -F arch=b32 -S ptrace -F a0=0x5 -k audit-wazuh-c
-a always,exit -F arch=b64 -S ptrace -F a0=0x5 -k audit-wazuh-c
-a always,exit -F arch=b32 -S ptrace -F a0=0x6 -k audit-wazuh-c
-a always,exit -F arch=b64 -S ptrace -F a0=0x6 -k audit-wazuh-c
-a always,exit -F arch=b32 -S ptrace -k audit-wazuh-c
-a always,exit -F arch=b64 -S ptrace -k audit-wazuh-c

## Anonymous File Creation
### These rules watch the use of memfd_create
### "memfd_create" creates anonymous file and returns a file descriptor to access it
### When combined with "fexecve" can be used to stealthily run binaries in memory without touching disk
-a always,exit -F arch=b64 -S memfd_create -F key=anon_file_create -k audit-wazuh-c
-a always,exit -F arch=b32 -S memfd_create -F key=anon_file_create -k audit-wazuh-c

## GDS specific secrets
-w /etc/puppet/ssl -p wa -k audit-wazuh-x

## 32bit API Exploitation
### If you are on a 64 bit platform, everything _should_ be running
### in 64 bit mode. This rule will detect any use of the 32 bit syscalls
### because this might be a sign of someone exploiting a hole in the 32
### bit API.
-a always,exit -F arch=b32 -S all -k audit-wazuh-x

# Make The Configuration Immutable --------------------------------------------

##-e 2
